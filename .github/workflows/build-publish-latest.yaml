name: Build and publish latest image

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ai-cockpit
  DOCKERHUB_USERNAME: starwit
  DOCKERHUB_ORG: starwitorg   

jobs:
  build:
    name: "Build and publish with build number"
    runs-on: [self-hosted, linux, X64]

    steps:
    - name: checkout
      uses: actions/checkout@v4    

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.2

    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - run: npm --version
    - run: node --version
    - run: mvn --version

    - name: get version from pom.xml
      run: |      
        echo "VERSION_BUILD=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )-${{ github.run_number }}" >> $GITHUB_ENV
        echo "VERSION_JAR=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )" >> $GITHUB_ENV

    - name: npm install
      run: |
        if [ -d "webclient/app" ]; then
          cd webclient/app
          npm install
        fi

    - name: Build with Maven
      run: mvn clean -B package -P frontend --settings .github/workflows/settings.xml --file pom.xml
      env:
         CI: false
         PRIVATE_REPO_USERNAME: ${{ vars.PRIVATE_REPO_USERNAME }}
         MAVEN_REPO_READ: ${{ secrets.MAVEN_REPO_READ }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
   
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_ORG }}/${{ env.IMAGE_NAME }}:${{ env.VERSION_BUILD }}

    - name: get helm
      uses: azure/setup-helm@v3  

    - name: login to Helm registry
      run: helm registry login registry-1.docker.io -u starwit -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: run helm update
      working-directory: application/target/helm/ai-cockpit
      run: helm dep update

    - name: run helm package
      working-directory: application/target/helm
      run: helm package ai-cockpit

    - name: get version number
      working-directory: application/target/helm/ai-cockpit
      run: |
        echo "HELM_VERSION=$(grep version: Chart.yaml | head -1 | awk '{print $2}')" >> $GITHUB_ENV

    - name: run helm push
      working-directory: application/target/helm
      run: helm push ai-cockpit-chart-${{ env.HELM_VERSION }}.tgz oci://registry-1.docker.io/starwitorg